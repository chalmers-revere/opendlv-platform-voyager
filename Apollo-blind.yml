# Copyright (C) 2019 Christian Berger
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

# Date: 2019-06-04

version: '2.3'

# These services run on Apollo (Intel Core).
services:
    ###########################################################################
    # Dump all containers from CID 106 on request.
    record-106:
        container_name: record-106
        image: chrberger/cluon-record-multi:v0.0.1
        cpuset: "1"
        restart: always
        network_mode: "host"
        volumes:
        - $HOME/recordings/upload:/recordings
        working_dir: /recordings
        command: "--remote --recsuffix=-all-no-can --cid=106"
        runtime: runc

    ###########################################################################
    # CAN interface to receive GPS/IMU data.
    dlv-can-peak:
        container_name: dlv-can-peak
        image: chalmersrevere/opendlv-device-gps-peak-multi:v0.0.8
        cpuset: "2"
        restart: always
        network_mode: "host"
        privileged: true
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -1 /usr/bin/opendlv-device-gps-peak --cid=106 --can=vcan1"
        #command: "nice -n -1 /usr/bin/opendlv-device-gps-peak --cid=106 --can=can0"
        runtime: runc

        # vcan1 is PEAK GPS with no lat/lon/speed

    # Temporary fix to use data from Garmin
    relay-from-91:
        container_name: relay-from-91
        image: chrberger/cluon-relay-multi:v0.0.4
        cpuset: "1"
        restart: always
        network_mode: "host"
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -6 /usr/bin/cluon-relay --cid-from=91 --cid-to=106 --keep=19"
        runtime: runc

    ###########################################################################
    # Raw CAN interfaces to the truck.
    dlv-can-raw:
        container_name: dlv-can-raw
        image: chalmersrevere/opendlv-device-can-raw-multi:v0.0.3
        cpuset: "3"
        restart: always
        network_mode: "host"
        privileged: true
        volumes:
        - $HOME/recordings/upload:/recordings
        working_dir: /recordings
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -1 /usr/bin/opendlv-device-can-raw --can-channels=can1:1,can2:2,can3:3 --remote --recsuffix=-can --cid=106"
        runtime: runc

    ###########################################################################
    # Left PtGrey camera.
    device-camera-ptgrey-amd64-left:
        container_name: dlv-ptgrey-left
        #image: ptgrey:v5
        build:
            context: https://github.com/chalmers-revere/opendlv-device-camera-spinnaker.git#v0.0.3
            dockerfile: Dockerfile.amd64
        cpuset: "6,7,8"
        restart: always
        network_mode: "host"
        ipc: "host"
        volumes:
        - /mnt/Volume1/data:/tmp
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -8 /usr/bin/opendlv-device-camera-spinnaker --camera=19074537 --width=2048 --height=1536 --fps=15 --name.i420=ptg-left.i420 --name.argb=ptg-left.argb --skip.argb"
        runtime: runc

    nvenc-h264-ll-rec-ptgrey-left:
        container_name: nvenc-h264-ll-rec-ptgrey-left
        #image: chrberger/video-nvenc-h264-recorder-amd64:cuda10-v0.0.2
        #image: nvenc-h264:v2
        build:
            context: https://${GH_TOKEN}:@github.com/chrberger/video-nvenc-h264-recorder.git#v0.0.3
            dockerfile: Dockerfile.amd64.cuda10
        depends_on:
        - device-camera-ptgrey-amd64-left
        cpuset: "6,7,8"
        init: true
        restart: always
        ipc: "host"
        network_mode: "host"
        volumes:
        - /mnt/Volume1/data:/tmp
        - $HOME/recordings/lossless:/recordings
        - /usr/lib64/libnvcuvid.so.430.40:/usr/lib/x86_64-linux-gnu/libnvcuvid.so.430.40
        - /usr/lib64/libnvidia-encode.so.430.40:/usr/lib/x86_64-linux-gnu/libnvidia-encode.so.430.40
        working_dir: /recordings
        command: "--name=ptg-left.i420 --width=2048 --height=1536 --recsuffix=-ptgrey-left-lossless --remote --cid=106 --id=1"
        runtime: nvidia

#    qsv-vp9-ptgrey-left:
#        container_name: qsv-vp9-ptgrey-left
#        #image: qsv-vp9-recorder:latest
#        build:
#            context: https://github.com/chrberger/video-qsv-vp9-recorder.git#v0.0.1
#            dockerfile: Dockerfile.amd64
#        depends_on:
#        - device-camera-ptgrey-amd64-left
#        cpuset: "6,7,8"
#        devices:
#        - /dev/dri/renderD128
#        restart: always
#        network_mode: "host"
#        ipc: "host"
#        volumes:
#        - /mnt/Volume1/data:/tmp
#        - $HOME/recordings/lossy:/recordings
#        working_dir: /recordings
#        cap_add:
#        - SYS_NICE
#        entrypoint: ""
#        command: "nice -n -7 /usr/bin/video-qsv-vp9-recorder --name=ptg-left.i420 --width=2048 --height=1536 --gop=10 --bitrate=30000 --recsuffix=-ptgrey-left-vp9 --remote --cid=106 --id=1"
#        runtime: runc

    ###########################################################################
    # Right PtGrey camera.
    device-camera-ptgrey-amd64-right:
        container_name: dlv-ptgrey-right
        #image: ptgrey:v5
        build:
            context: https://github.com/chalmers-revere/opendlv-device-camera-spinnaker.git#v0.0.3
            dockerfile: Dockerfile.amd64
        cpuset: "11,12,13"
        restart: always
        network_mode: "host"
        ipc: "host"
        volumes:
        - /mnt/Volume1/data:/tmp
        cap_add:
        - SYS_NICE
        entrypoint: ""
        command: "nice -n -8 /usr/bin/opendlv-device-camera-spinnaker --camera=19074539 --width=2048 --height=1536 --fps=15 --name.i420=ptg-right.i420 --name.argb=ptg-right.argb --skip.argb"
        runtime: runc

    nvenc-h264-ll-rec-ptgrey-right:
        container_name: nvenc-h264-ll-rec-ptgrey-right
        #image: chrberger/video-nvenc-h264-recorder-amd64:cuda10-v0.0.2
        #image: nvenc-h264:v2
        build:
            context: https://${GH_TOKEN}:@github.com/chrberger/video-nvenc-h264-recorder.git#v0.0.3
            dockerfile: Dockerfile.amd64.cuda10
        depends_on:
        - device-camera-ptgrey-amd64-right
        cpuset: "11,12,13"
        init: true
        restart: always
        ipc: "host"
        network_mode: "host"
        volumes:
        - /mnt/Volume1/data:/tmp
        - $HOME/recordings/lossless:/recordings
        - /usr/lib64/libnvcuvid.so.430.40:/usr/lib/x86_64-linux-gnu/libnvcuvid.so.430.40
        - /usr/lib64/libnvidia-encode.so.430.40:/usr/lib/x86_64-linux-gnu/libnvidia-encode.so.430.40
        working_dir: /recordings
        command: "--name=ptg-right.i420 --width=2048 --height=1536 --recsuffix=-ptgrey-right-lossless --remote --cid=106 --id=2"
        runtime: nvidia

#    qsv-vp9-ptgrey-right:
#        container_name: qsv-vp9-ptgrey-right
#        #image: qsv-vp9-recorder:latest
#        build:
#            context: https://github.com/chrberger/video-qsv-vp9-recorder.git#v0.0.1
#            dockerfile: Dockerfile.amd64
#        depends_on:
#        - device-camera-ptgrey-amd64-right
#        cpuset: "11,12,13"
#        devices:
#        - /dev/dri/renderD128
#        restart: always
#        network_mode: "host"
#        ipc: "host"
#        volumes:
#        - /mnt/Volume1/data:/tmp
#        - $HOME/recordings/lossy:/recordings
#        working_dir: /recordings
#        cap_add:
#        - SYS_NICE
#        entrypoint: ""
#        command: "nice -n -7 /usr/bin/video-qsv-vp9-recorder --name=ptg-right.i420 --width=2048 --height=1536 --gop=10 --bitrate=30000 --recsuffix=-ptgrey-right-vp9 --remote --cid=106 --id=2"
#        runtime: runc


    ###########################################################################
    # Axis camera including recording functionality with remote start/stop.
    dev-camera-axis0:
        container_name: dev-camera-axis0
        image: chalmersrevere/opendlv-device-camera-rtp-amd64:v0.0.3
        cpuset: "2"
        restart: always
        network_mode: "host"
        volumes:
        - $HOME/recordings/lossy:/recordings
        working_dir: /recordings
        command: "--url=rtsp://10.40.41.2/axis-media/media.amp\\?camera=1 --cid=106 --id=0 --client-port-udp-a=35000 --remote --recsuffix=-axis"
        runtime: runc

